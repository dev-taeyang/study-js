함수	-> 각각의 페이지마다 재사용할 수 있게 사용함.
	자바스크립트(함수형 프로그래밍)

	코드의 재사용을 위한 목적으로 사용된다.
	
	- 인자(파라미터, parameter, variable) : 매개변수(선언부)
	- 인수(아큐먼트, argument, value) : 매개변수에 들어가는 값(사용부, 호출부)

함수의 선언 %식별자(이름, identifier)
	function 식별자(arg1, arg2, arg3, ...) {   //타입을 정하지 않기때문에 활용성이 불편해진다.

		실행할 문장;
		return 리턴 값;
	{

	*typeScript (기존에 있는 js를 -> ts 로 변경해서 컴파일함)

	- function: 함수 선언 표시한다.
	- 식별자 : 동사로 작성한다.
	- parameter : 여러 개 있을 떄에는 콤마로 분리하고 자료형을 따로 작성하지 않는다. 생략도 가능하다.
	- return : 생략이 가능하다. 리턴 타입은 따로 작성하지 않고, return을 만나면 함수는 즉시 종료된다.

*영역 밖에서 선언이되면 함수, 안에서 되면 메소드

===========================================================================

전역 함수

	- eval()
		문자열 형태의 수식을 전달 받아서 수식을 계산한다.
	- parseInt()
		문자열을 정수로 변환.
		parseInt("34") === 34
	- isNaN()
		값이 NaN이면 true
		NaN이 아니면 false
	- isFinite()
		값이 NaN이 아니면 true
		NaN이면 false

===========================================================================

객체 - 모든 애들을 다 객체로 취급함. (자바에서 필드 -> 프로퍼티)
	객체의 고유한 속성을 프로퍼티(property)라고 부르며, 여러 프로퍼티와 값의 쌍으로 표현된다.
	객체가 호출하는 함수는 메소드라고 부른다.

	account = {name: '한동석', number: '10230120301', password : '1234'}

	account
	


















	